fc_deep:
  local_dataset:
    train: "train.npz"
    test: "test.npz"
    central_test: mnist_central_test.npz
    detail:  {}


  logic:
    mode: "file"
    dir: "."

  result:
    pred: "y_pred.csv"
    target: "y_test.csv"
    central_pred: "central_pred.csv"
    central_target: "central_target.csv"
    model: "model.pt"

  fed_hyper_params:
    max_iter: 20
    n_classes: 10
    federated_model: 'FedAvg.py'
    global_updates: WEIGHTS_STOPPING
    param: { }


  use_smpc: False


  trainer:
    name: 'BasicTrainer'
    param: {}
    local_updates: WEIGHTS_N_SAMPLES

    data_loader: ImageLoader # True: using torchvision Dataloader, False using custom Dataloader
    optimizer:
      name: 'SGD'
      param:
        lr: 0.1
    loss:
      name: 'CrossEntropyLoss'

    metrics:
      - name: 'Accuracy'
        package: 'torchmetrics.classification'
        param:
          task: 'multiclass'
          num_classes: 10

  train_config:
    verbose: True
    batch_size: 32
    test_batch_size: 32
    epochs: 1
    lr: 0.1
    batch_count: 1
    device: 'gpu'

  model: # 'cnn' or 'cnn.py' or layers_dict
    name: 'cnn.py'
    n_classes: 10
    in_features: 1